int	280	1	1	4
s	284	1	5	6
[	274	1	6	7
250000	285	1	7	13
]	275	1	13	14
;	270	1	14	15
void	282	5	1	5
QuickSort	284	5	6	15
(	272	5	15	16
int	280	5	16	19
s	284	5	20	21
[]	287	5	21	23
,	271	5	23	24
int	280	5	25	28
p	284	5	29	30
,	271	5	30	31
int	280	5	32	35
r	284	5	36	37
)	273	5	37	38
{	276	5	39	40
int	280	6	2	5
q	284	6	6	7
;	270	6	7	8
if	279	7	2	4
(	272	7	5	6
p	284	7	6	7
<	263	7	8	9
r	284	7	10	11
)	273	7	11	12
{	276	7	13	14
q	284	8	3	4
=	269	8	5	6
Partition	284	8	7	16
(	272	8	16	17
p	284	8	17	18
,	271	8	18	19
r	284	8	20	21
)	273	8	21	22
;	270	8	22	23
QuickSort	284	9	3	12
(	272	9	12	13
s	284	9	13	14
,	271	9	14	15
p	284	9	16	17
,	271	9	17	18
q	284	9	19	20
-	260	9	21	22
1	285	9	23	24
)	273	9	24	25
;	270	9	25	26
QuickSort	284	10	3	12
(	272	10	12	13
s	284	10	13	14
,	271	10	14	15
q	284	10	16	17
+	259	10	18	19
1	285	10	20	21
,	271	10	21	22
r	284	10	23	24
)	273	10	24	25
;	270	10	25	26
}	277	11	2	3
}	277	12	1	2
int	280	16	1	4
Partition	284	16	5	14
(	272	16	14	15
int	280	16	15	18
p	284	16	19	20
,	271	16	20	21
int	280	16	22	25
r	284	16	26	27
)	273	16	27	28
{	276	16	29	30
int	280	17	2	5
x	284	17	6	7
,	271	17	7	8
t	284	17	9	10
;	270	17	10	11
int	280	18	2	5
i	284	18	6	7
,	271	18	7	8
j	284	18	9	10
;	270	18	10	11
x	284	19	2	3
=	269	19	4	5
s	284	19	6	7
[	274	19	7	8
r	284	19	8	9
]	275	19	9	10
;	270	19	10	11
i	284	20	2	3
=	269	20	4	5
p	284	20	6	7
-	260	20	8	9
1	285	20	10	11
;	270	20	11	12
j	284	21	2	3
=	269	21	4	5
p	284	21	6	7
;	270	21	7	8
while	283	22	2	7
(	272	22	8	9
j	284	22	9	10
<	263	22	11	12
r	284	22	13	14
)	273	22	14	15
{	276	22	16	17
if	279	23	3	5
(	272	23	6	7
s	284	23	7	8
[	274	23	8	9
j	284	23	9	10
]	275	23	10	11
<	263	23	12	13
x	284	23	14	15
)	273	23	15	16
{	276	23	17	18
i	284	24	4	5
=	269	24	6	7
i	284	24	8	9
+	259	24	10	11
1	285	24	12	13
;	270	24	13	14
t	284	25	4	5
=	269	25	6	7
s	284	25	8	9
[	274	25	9	10
j	284	25	10	11
]	275	25	11	12
;	270	25	12	13
s	284	26	4	5
[	274	26	5	6
j	284	26	6	7
]	275	26	7	8
=	269	26	9	10
s	284	26	11	12
[	274	26	12	13
i	284	26	13	14
]	275	26	14	15
;	270	26	15	16
s	284	27	4	5
[	274	27	5	6
i	284	27	6	7
]	275	27	7	8
=	269	27	9	10
t	284	27	11	12
;	270	27	12	13
}	277	28	3	4
j	284	29	3	4
=	269	29	5	6
j	284	29	7	8
+	259	29	9	10
1	285	29	11	12
;	270	29	12	13
}	277	30	2	3
t	284	31	2	3
=	269	31	4	5
s	284	31	6	7
[	274	31	7	8
r	284	31	8	9
]	275	31	9	10
;	270	31	10	11
s	284	32	2	3
[	274	32	3	4
r	284	32	4	5
]	275	32	5	6
=	269	32	7	8
s	284	32	9	10
[	274	32	10	11
i	284	32	11	12
+	259	32	13	14
1	285	32	15	16
]	275	32	16	17
;	270	32	17	18
s	284	33	2	3
[	274	33	3	4
i	284	33	4	5
+	259	33	6	7
1	285	33	8	9
]	275	33	9	10
=	269	33	11	12
t	284	33	13	14
;	270	33	14	15
return	281	34	2	8
i	284	34	9	10
+	259	34	11	12
1	285	34	13	14
;	270	34	14	15
}	277	35	1	2
int	280	36	1	4
main	284	36	5	9
(	272	36	9	10
void	282	36	10	14
)	273	36	14	15
{	276	36	16	17
int	280	37	2	5
n	284	37	6	7
;	270	37	7	8
QuickSort	284	38	2	11
(	272	38	11	12
s	284	38	12	13
,	271	38	13	14
0	285	38	15	16
,	271	38	16	17
n	284	38	18	19
-	260	38	20	21
1	285	38	22	23
)	273	38	23	24
;	270	38	24	25
return	281	39	2	8
0	285	39	9	10
;	270	39	10	11
}	277	40	1	2
